version: '3.8'

services:
  # Main application server
  api:
    build:
      context: ../server
      dockerfile: Dockerfile.production
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - ../server/.env.production
    volumes:
      - ../server/logs:/app/logs
      - ../server/uploads:/app/uploads
    networks:
      - coaching-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - coaching-network
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-coaching-redis-password}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Nginx reverse proxy and static file server
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.production.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ../client/dist:/var/www/html:ro
    networks:
      - coaching-network
    restart: unless-stopped
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Background job processor (optional)
  worker:
    build:
      context: ../server
      dockerfile: Dockerfile.worker
    environment:
      - NODE_ENV=production
      - WORKER_MODE=true
    env_file:
      - ../server/.env.production
    volumes:
      - ../server/logs:/app/logs
    networks:
      - coaching-network
    restart: unless-stopped
    depends_on:
      - redis
      - api
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

networks:
  coaching-network:
    driver: bridge

volumes:
  redis_data:
    driver: local 