name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: |
          npm ci
          npm ci --workspaces --if-present
      
      # Verify ESLint plugins are available
      - name: Verify ESLint plugins
        run: |
          echo "Checking ESLint plugin availability..."
          npm list eslint-plugin-react || echo "eslint-plugin-react not found at root"
          cd client && npm list eslint-plugin-react-hooks || echo "eslint-plugin-react-hooks not found in client"
          cd .. && ls -la node_modules/eslint-plugin-react* || echo "No eslint-plugin-react* found in root node_modules"
      
      # Run linting (warnings allowed, only errors fail CI)
      - name: Run ESLint
        run: npx eslint . --ext .ts,.tsx --max-warnings 1500

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        id: cache-npm-build
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        if: steps.cache-npm-build.outputs.cache-hit != 'true'
        run: |
          npm ci
          npm ci --workspaces --if-present
      
      # Run type checking
      - name: Run type checking
        run: npm run ci-check
      
      # Build the application
      - name: Build application
        run: npm run build --if-present

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        id: cache-npm-security
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        if: steps.cache-npm-security.outputs.cache-hit != 'true'
        run: |
          npm ci
          npm ci --workspaces --if-present
      
      # Run security audit on production dependencies
      - name: Run npm audit (Server)
        run: |
          cd server
          npm audit --audit-level=moderate --production
      
      - name: Run npm audit (Client)
        run: |
          cd client
          npm audit --audit-level=moderate --production
      
      - name: Run npm audit (Root)
        run: npm audit --audit-level=moderate --production

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        id: cache-npm-test
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        if: steps.cache-npm-test.outputs.cache-hit != 'true'
        run: |
          npm ci
          npm ci --workspaces --if-present
      
      # Run tests
      - name: Run tests
        run: npm test
