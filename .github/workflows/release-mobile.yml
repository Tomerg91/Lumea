name: Mobile Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build Mobile Apps
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0
        
      - name: Setup Node.js
        uses: actions/setup-node@v3.5.1
        with:
          node-version: '20'
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 8
          run_install: false
      
      - name: Install dependencies
        run: pnpm install
        
      - name: Install rollup-plugin-visualizer explicitly
        run: pnpm add -D rollup-plugin-visualizer
      
      - name: Build web app
        run: pnpm build
      
      - name: Setup Java for Android build
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Capacitor sync
        run: npx cap sync
      
      - name: Build Android AAB
        run: |
          cd android
          echo "Building Android App Bundle..."
          ./gradlew bundle --info
          echo "Android build completed."
        continue-on-error: true
      
      - name: Verify Android AAB exists
        id: check-aab
        run: |
          AAB_PATH="android/app/build/outputs/bundle/release/app-release.aab"
          echo "Checking for Android AAB at: $AAB_PATH"
          if [ -f "$AAB_PATH" ]; then
            echo "Android AAB file found!"
            echo "aab_exists=true" >> $GITHUB_OUTPUT
            ls -la "$AAB_PATH"
          else
            echo "ERROR: Android AAB file not found! Halting workflow."
            ls -la android/app/build/outputs/bundle/release/ || echo "Release directory doesn't exist"
            echo "aab_exists=false" >> $GITHUB_OUTPUT
            exit 1 # Exit with error to stop the workflow
          fi
      
      - name: Setup iOS certificates
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "iOS certificate setup would go here in production workflow"
        # In a real workflow, you would use a GitHub Action to setup certificates
        # such as https://github.com/Apple-Actions/import-codesigning-certs
      
      - name: Build iOS Archive
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd ios
          echo "Building iOS Archive..."
          xcodebuild -workspace App/App.xcworkspace -scheme App -configuration Release archive -archivePath App/build/App.xcarchive -allowProvisioningUpdates -verbose
          echo "iOS build completed."
        continue-on-error: true
      
      - name: Verify iOS Archive exists
        if: startsWith(github.ref, 'refs/tags/v')
        id: check-archive
        run: |
          ARCHIVE_PATH="ios/App/build/App.xcarchive"
          echo "Checking for iOS Archive at: $ARCHIVE_PATH"
          if [ -d "$ARCHIVE_PATH" ]; then
            echo "iOS Archive found!"
            echo "archive_exists=true" >> $GITHUB_OUTPUT
            ls -la "$ARCHIVE_PATH"
          else
            echo "ERROR: iOS Archive not found! Halting workflow."
            ls -la ios/App/build/ || echo "Build directory doesn't exist"
            echo "archive_exists=false" >> $GITHUB_OUTPUT
            exit 1 # Exit with error to stop the workflow
          fi
      
      - name: Upload Android AAB
        id: upload-aab
        uses: actions/upload-artifact@v3.1.0
        with:
          name: android-aab
          path: android/app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: error
        continue-on-error: true
      
      - name: Retry Android AAB Upload
        if: steps.check-aab.outputs.aab_exists == 'true' && steps.upload-aab.outcome == 'failure'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: android-aab-retry
          path: android/app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: error
      
      - name: Create empty AAB placeholder (for debugging)
        if: steps.check-aab.outputs.aab_exists != 'true'
        run: |
          echo "Creating placeholder for debugging. Real build failed to generate AAB."
          mkdir -p android/app/build/outputs/bundle/release/
          echo "This is a placeholder file. The actual build failed." > android/app/build/outputs/bundle/release/build-failed-placeholder.txt
      
      - name: Upload Android build directory (for debugging)
        id: upload-android-debug
        if: steps.check-aab.outputs.aab_exists != 'true'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: android-build-output
          path: android/app/build/outputs/
          if-no-files-found: warn
        continue-on-error: true
      
      - name: Retry Android Debug Upload
        if: steps.check-aab.outputs.aab_exists != 'true' && steps.upload-android-debug.outcome == 'failure'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: android-build-output-retry
          path: android/app/build/outputs/
          if-no-files-found: warn
      
      - name: Upload iOS Archive
        id: upload-ios
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ios-archive
          path: ios/App/build/App.xcarchive
          if-no-files-found: error
        continue-on-error: true
      
      - name: Retry iOS Archive Upload
        if: startsWith(github.ref, 'refs/tags/v') && steps.check-archive.outputs.archive_exists == 'true' && steps.upload-ios.outcome == 'failure'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ios-archive-retry
          path: ios/App/build/App.xcarchive
          if-no-files-found: error
      
      - name: Upload iOS build directory (for debugging)
        id: upload-ios-debug
        if: startsWith(github.ref, 'refs/tags/v') && steps.check-archive.outputs.archive_exists != 'true'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ios-build-output
          path: ios/App/build/
          if-no-files-found: warn
        continue-on-error: true
      
      - name: Retry iOS Debug Upload
        if: startsWith(github.ref, 'refs/tags/v') && steps.check-archive.outputs.archive_exists != 'true' && steps.upload-ios-debug.outcome == 'failure'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ios-build-output-retry
          path: ios/App/build/
          if-no-files-found: warn
      
      - name: Prepare release notes
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "Release notes for version ${GITHUB_REF#refs/tags/}" > release-notes.md
          echo "" >> release-notes.md
          echo "## What's New" >> release-notes.md
          echo "- Feature 1" >> release-notes.md
          echo "- Feature 2" >> release-notes.md
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            android/app/build/outputs/bundle/release/app-release.aab
          body_path: release-notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 